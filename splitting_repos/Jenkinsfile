/**
 * Automatically generated by the EPF PipelineConverter tool
 * Warning: This file serves as a starting point only, and ensure you check for any missing or incorrect values
 */
library "epf"
boolean isProductionDeployment = env.BRANCH_NAME ==~ /^(release|hotfix).*/

env.CNP_IGNORE_CONFTEST_ANALYSIS_FAILURE=true
env.CNP_AWS_IDP_PROVIDER='Okta'
env.CNP_AWS_TF_CRED_DEV = 'DAWS-HS-UPSILONFRIES'
env.CNP_AWS_TF_CRED_QA = 'TAWS-HS-UPSILONFRIES'
//env.CNP_AWS_TF_CRED_PROD = 'PAWS-HS-UPSILONFRIES'
env.CNP_DEFAULT_TERRAFORM_IMAGE = 'cnp/cnp-docker-terraform:1.0.0-dev-ov2'
def APPROVERS = 'accounts\\C8P8ZF,accounts\\P57026, accounts\\C7B8GS,accounts\\C7Q7RW,accounts\\C7R5TN,accounts\\C8C7GQ,accounts\\EI5194,accounts\\EJ6842,accounts\\C8Q9M3'

List phasesToRun = [

    /***********Dev Candidate (Blue) Plan configuration*****************/
    /*
    [   

        
        ?branchPattern: '^(develop|release|hotfix|feature).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform plan to DEV-Candidate (Blue)?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],

    [
        moduleType          : 'terraform',
        branchPattern       : '^(develop|release|hotfix|feature).*',            
        module              : [
            contractName    : 'Plan Dev Candidate',
            commandName     : 'cnp-deploy-terraform-aws.sh',
            subCommand      : 'plan',
            image           : 'registry-dev.cigna.com/cnp/cnp-docker-terraform:1.0.0-dev-ov2',
            moduleName      : 'cnp-deploy-terraform-aws',
            sdlcEnvironment : 'dev-candidate',
        ],
        args                  : [
            credentials           : [[id: 'DAWS-HS-UPSILONFRIES', env: 'dev', type: 'string']],
            configDir             : 'envs/dev-candidate',
            env                   : 'dev',
            awsAccountId          : '364685145795',
            awsUsername           : 'DAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container             : [ 
            memory: 2000, 
        ],
    ],
    */
    /***********Dev-candidate (Blue) Apply configuration*****************/
    [
        branchPattern: '^(develop|release|hotfix|feature).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform apply to DEV-Candidate (blue)?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    
    [
        moduleType            : 'terraform',
        moduleName            : 'cnp-deploy-terraform-aws',
        subCommand            : 'apply',
        branchPattern         : '^(develop|release|hotfix|feature).*',
        sdlcEnvironment       : 'dev-candidate',
        isProductionDeployment: false,        
        args                  : [
            configDir             : 'envs/dev-candidate',
            env                   : 'dev',
            awsAccountId          : '364685145795',
            awsUsername           : 'DAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container: [ 
            memory: 2000, 
        ],
    ],

    /***********Dev (Green) Plan configuration*****************/
    /*
    [
        branchPattern: '^(develop|release|hotfix|feature).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform plan to DEV (Green)?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],

    [
        moduleType          : 'terraform',
        branchPattern       : '^(develop|release|hotfix|feature).*',            
        module              : [
            contractName    : 'Plan Dev',
            commandName     : 'cnp-deploy-terraform-aws.sh',
            subCommand      : 'plan',
            image           : 'registry-dev.cigna.com/cnp/cnp-docker-terraform:1.0.0-dev-ov2',
            moduleName      : 'cnp-deploy-terraform-aws',
            sdlcEnvironment : 'dev',
        ],
        args                  : [
            credentials           : [[id: 'DAWS-HS-UPSILONFRIES', env: 'dev', type: 'string']],
            configDir             : 'envs/dev',
            env                   : 'dev',
            awsAccountId          : '364685145795',
            awsUsername           : 'DAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container             : [ 
            memory: 2000, 
        ],
    ],
    */
    /***********Dev (Green) Apply configuration*****************/
    [
        branchPattern: '^(develop|release|hotfix|feature).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform apply to DEV (Green)?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    
    [
        moduleType            : 'terraform',
        moduleName            : 'cnp-deploy-terraform-aws',
        subCommand            : 'apply',
        branchPattern         : '^(develop|release|hotfix|feature).*',
        sdlcEnvironment       : 'dev',
        isProductionDeployment: false,        
        args                  : [
            configDir             : 'envs/dev',
            env                   : 'dev',
            awsAccountId          : '364685145795',
            awsUsername           : 'DAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container: [ 
            memory: 2000, 
        ],
    ],
    /***********QA Candidate (Blue) Plan configuration*****************/
    /*
    [
        branchPattern: '^(develop|release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform plan to qa-Candidate (Blue)?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],

    [
        moduleType          : 'terraform',
        branchPattern       : '^(develop|release|hotfix).*',            
        module              : [
            contractName    : 'Plan qa Candidate',
            commandName     : 'cnp-deploy-terraform-aws.sh',
            subCommand      : 'plan',
            image           : 'registry-dev.cigna.com/cnp/cnp-docker-terraform:1.0.0-dev-ov2',
            moduleName      : 'cnp-deploy-terraform-aws',
            sdlcEnvironment : 'qa-candidate',
        ],
        args                  : [
            credentials           : [[id: 'TAWS-HS-UPSILONFRIES', env: 'qa', type: 'string']],
            configDir             : 'envs/qa-candidate',
            env                   : 'qa',
            awsAccountId          : '310705775535',
            awsUsername           : 'TAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container             : [ 
            memory: 2000, 
        ],
    ],
    */
    /***********QA Candidate (Blue) Apply configuration*****************/
    [
        branchPattern: '^(develop|release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform apply to qa-Candidate (blue)?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    
    [
        moduleType            : 'terraform',
        moduleName            : 'cnp-deploy-terraform-aws',
        subCommand            : 'apply',
        branchPattern         : '^(develop|release|hotfix).*',
        sdlcEnvironment       : 'qa-candidate',
        isProductionDeployment: false,        
        args                  : [
            configDir             : 'envs/qa-candidate',
            env                   : 'qa',
            awsAccountId          : '310705775535',
            awsUsername           : 'TAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container: [ 
            memory: 2000, 
        ],
    ],

    /***********QA (Green) Plan configuration*****************/
    /*
    [
        branchPattern: '^(develop|release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform plan to QA (Green)?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],

    [
        moduleType          : 'terraform',
        branchPattern       : '^(develop|release|hotfix).*',            
        module              : [
            contractName    : 'Plan qa',
            commandName     : 'cnp-deploy-terraform-aws.sh',
            subCommand      : 'plan',
            image           : 'registry-dev.cigna.com/cnp/cnp-docker-terraform:1.0.0-dev-ov2',
            moduleName      : 'cnp-deploy-terraform-aws',
            sdlcEnvironment : 'qa',
        ],
        args                  : [
            credentials           : [[id: 'TAWS-HS-UPSILONFRIES', env: 'qa', type: 'string']],
            configDir             : 'envs/qa',
            env                   : 'qa',
            awsAccountId          : '310705775535',
            awsUsername           : 'TAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container             : [ 
            memory: 2000, 
        ],
    ],
    */
    /***********QA (Green) Apply configuration*****************/
    [
        branchPattern: '^(develop|release|hotfix).*',
        lintingTypes: [
            approvalrequest: [
                timeOut: 120,
                message: 'Do you want to execute terraform apply to QA (Green)?',
                id: 'cnpApprove',
                submitter: APPROVERS,
            ],
        ],
    ],
    
    [
        moduleType            : 'terraform',
        moduleName            : 'cnp-deploy-terraform-aws',
        subCommand            : 'apply',
        branchPattern         : '^(develop|release|hotfix).*',
        sdlcEnvironment       : 'qa',
        isProductionDeployment: false,        
        args                  : [
            configDir             : 'envs/qa',
            env                   : 'qa',
            awsAccountId          : '310705775535',
            awsUsername           : 'TAWS-HS-UPSILONFRIES',
            awsRoleName           : 'DEPLOYER',
            tfVersion             : '1.4.6',
            tfDir                 : ''
        ],
        container: [ 
            memory: 2000, 
        ],
    ],
]
cignaBuildFlow {
    githubConnectionName = 'github'
    githubCredentialsId = 'GIT_TOKEN'
    commitStatusName = ''
    cloudName = 'pbbef-openshift-devops1'
    phases = phasesToRun
}
